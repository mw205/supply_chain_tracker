# .gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.pyc
*.pyo
*.pyd

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a PyInstaller script; this is forward-looking
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff (if you were to use it, good general Python ones)
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff (if you were to use it)
instance/
.webassets-cache

# Scrapy stuff (if you were to use it)
.scrapy

# Sphinx documentation
docs/_build/

# Jupyter Notebook
.ipynb_checkpoints

# Virtual Environments
.env # If it contains sensitive information. If it only contains non-sensitive dev defaults, some teams commit it.
     # Given our .env.example approach, it's safer to ignore the actual .env
.venv/
venv/
ENV/
env/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# IDE & editor configuration files
.vscode/ # Can be configured to allow sharing some settings if desired via .vscode/settings.json
.idea/
*.swp
*.swo
*~

# SQLite database file (specific to this project)
supply_chain.db
*.db
*.sqlite
*.sqlite3
# If you use Alembic for migrations, you might want to keep the migration scripts
# but ignore the actual database file.

# Operating System Files
.DS_Store
Thumbs.db
Desktop.ini

# Log files
*.log
logs/

# Environment variable files
.env # Generally ignore the actual .env file with secrets/specifics
# .env.*.local # For local overrides

# dotenv environment variable files specific to environments
.env.development
.env.test
.env.production
# Only .env.example or .env.template should be committed

# node_modules (if you ever add Node.js tools for frontend or anything else)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json # Some prefer to commit, others to generate
yarn.lock         # Same as above

# Frontend build artifacts (if you had a more complex frontend build)
# /frontend/dist
# /frontend/build

# MyPy cache
.mypy_cache/

# Ruff cache
.ruff_cache/